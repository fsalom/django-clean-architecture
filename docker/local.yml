services:
  web:
    container_name: web
    restart: always
    build:
      context: ..
      dockerfile: docker/app/Dockerfile
    image: websource
    ports:
      - '127.0.0.1:8000:8000'
    env_file: 'environments/local.env'
    command: 'gunicorn config.wsgi:application -k gevent -w 3 -b :8000 --worker-connections=1000 --reload --capture-output --enable-stdio-inheritance --log-level=debug --access-logfile=- --log-file=-'
    volumes:
      - cachedata:/cache
      - mediadata:/media
      - staticdata:/static
    depends_on:
      - redis
      - postgres

  postgres:
      container_name: 'postgres'
      image: 'postgres:13-alpine'
      env_file: 'environments/local.env'
      ports:
        - '5432:5432'
      volumes:
        - 'pgdata:/var/lib/postgresql/data'

  celery_worker:
    container_name: 'celery_worker'
    image: 'websource'
    env_file: 'environments/local.env'
    command: 'python -m celery -A config worker -l debug'
    volumes:
      - 'backend:/code'
    depends_on:
      - web

  celery_beat:
    container_name: 'celery_beat'
    image: 'websource'
    env_file: 'environments/local.env'
    command: 'python -m celery -A config beat --pidfile= -l debug'
    volumes:
      - 'backend:/code'
    depends_on:
      - web

  redis:
    container_name: 'redis'
    image: 'redis:3.2.0'
    ports:
      - '127.0.0.1:6379:6379'
    volumes:
      - 'redisdata:/data'

volumes:
  redisdata:
  cachedata:
  mediadata:
  staticdata:
  filesdata:
  nginx:
  backend:
  pgdata: